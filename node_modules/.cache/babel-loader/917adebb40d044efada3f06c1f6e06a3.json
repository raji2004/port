{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nexport function onErrorResumeNext() {\n  var sources = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  var first = sources[0],\n      remainder = sources.slice(1);\n\n  if (sources.length === 1 && isArray(first)) {\n    return onErrorResumeNext.apply(void 0, first);\n  }\n\n  return new Observable(function (subscriber) {\n    var subNext = function () {\n      return subscriber.add(onErrorResumeNext.apply(void 0, remainder).subscribe(subscriber));\n    };\n\n    return from(first).subscribe({\n      next: function (value) {\n        subscriber.next(value);\n      },\n      error: subNext,\n      complete: subNext\n    });\n  });\n}","map":{"version":3,"sources":["../../../src/internal/observable/onErrorResumeNext.ts"],"names":[],"mappings":"AAAA;AAEA,SAAS,UAAT,QAAqB,eAArB;AACA,SAAS,IAAT,QAAkB,QAAlB;AACA,SAAS,OAAT,QAAsB,iBAAtB;AAwEA,SAAM,KAAN,QAAgB,SAAhB;AAAwC,OAAA,SAAA,iBAAA,GAEqD;MAFrD,OAAA,GAAA,E;;AAAA,OAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,SAAA,CAEqD,MAFrD,EAEqD,EAAA,EAFrD,EAEqD;;AAE3F;;MACE,OAAO,CAAA,MAAP,KAAa,C,EAAA;AACd,WAAA,KAAA;AAEO;;AAER,MAAI,KAAA,GAAQ,OAAM,CAAA,CAAA,CAAlB;AAAA,MAAwB,SAAI,GAAQ,OAAM,CAAE,KAAR,CAAQ,CAAR,CAApC;;MACE,OAAO,CAAA,MAAP,KAAO,CAAP,IAAwB,OAAA,CAAA,KAAA,C,EAAI;AAC7B,WAAA,iBAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA;AAED;;AACE,SAAA,IAAM,UAAN,CAAgB,UAAM,UAAN,EAAM;AAItB,QAAA,OAAW,GAAC,YAAO;AAAS,aAAC,UAAA,CAAA,GAAA,CAAA,iBAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,SAAA,EAAA,SAAA,CAAA,UAAA,CAAA,CAAD;AAAC,KAA7B;;AACE,WAAA,IAAI,CAAA,KAAA,CAAJ,CAAI,SAAJ,CAAc;AACd,MAAA,IAAA,EAAK,UAAS,KAAT,EAAS;AAAA,QAAA,UAAA,CAAA,IAAA,CAAA,KAAA;AAAA,OADA;AAEd,MAAA,KAAA,EAAA,OAFc;AAGb,MAAA,QAAA,EAAA;AAHa,KAAd,CAAA;AAKL,GAVG,CAAA","sourcesContent":["/** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */\r\nimport { Observable } from '../Observable';\r\nimport { from } from './from';\r\nimport { isArray } from '../util/isArray';\r\nimport { EMPTY } from './empty';\r\nexport function onErrorResumeNext() {\r\n    var sources = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        sources[_i] = arguments[_i];\r\n    }\r\n    if (sources.length === 0) {\r\n        return EMPTY;\r\n    }\r\n    var first = sources[0], remainder = sources.slice(1);\r\n    if (sources.length === 1 && isArray(first)) {\r\n        return onErrorResumeNext.apply(void 0, first);\r\n    }\r\n    return new Observable(function (subscriber) {\r\n        var subNext = function () { return subscriber.add(onErrorResumeNext.apply(void 0, remainder).subscribe(subscriber)); };\r\n        return from(first).subscribe({\r\n            next: function (value) { subscriber.next(value); },\r\n            error: subNext,\r\n            complete: subNext,\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=onErrorResumeNext.js.map\r\n"]},"metadata":{},"sourceType":"module"}