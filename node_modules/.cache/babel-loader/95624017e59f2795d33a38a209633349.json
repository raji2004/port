{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nvar NONE = {};\nexport function combineLatest() {\n  var observables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i] = arguments[_i];\n  }\n\n  var resultSelector = undefined;\n  var scheduler = undefined;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = observables.pop();\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = observables.pop();\n  }\n\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = observables[0];\n  }\n\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\n\nvar CombineLatestOperator = /*@__PURE__*/function () {\n  function CombineLatestOperator(resultSelector) {\n    this.resultSelector = resultSelector;\n  }\n\n  CombineLatestOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  };\n\n  return CombineLatestOperator;\n}();\n\nexport { CombineLatestOperator };\n\nvar CombineLatestSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(CombineLatestSubscriber, _super);\n\n  function CombineLatestSubscriber(destination, resultSelector) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.resultSelector = resultSelector;\n    _this.active = 0;\n    _this.values = [];\n    _this.observables = [];\n    return _this;\n  }\n\n  CombineLatestSubscriber.prototype._next = function (observable) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  };\n\n  CombineLatestSubscriber.prototype._complete = function () {\n    var observables = this.observables;\n    var len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n\n      for (var i = 0; i < len; i++) {\n        var observable = observables[i];\n        this.add(subscribeToResult(this, observable, undefined, i));\n      }\n    }\n  };\n\n  CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  };\n\n  CombineLatestSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {\n    var values = this.values;\n    var oldVal = values[outerIndex];\n    var toRespond = !this.toRespond ? 0 : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  };\n\n  CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\n    var result;\n\n    try {\n      result = this.resultSelector.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.destination.next(result);\n  };\n\n  return CombineLatestSubscriber;\n}(OuterSubscriber);\n\nexport { CombineLatestSubscriber };","map":{"version":3,"sources":["../../../src/internal/observable/combineLatest.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { isScheduler } from '../util/isScheduler';\r\nimport { isArray } from '../util/isArray';\r\nimport { OuterSubscriber } from '../OuterSubscriber';\r\nimport { subscribeToResult } from '../util/subscribeToResult';\r\nimport { fromArray } from './fromArray';\r\nvar NONE = {};\r\nexport function combineLatest() {\r\n    var observables = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        observables[_i] = arguments[_i];\r\n    }\r\n    var resultSelector = undefined;\r\n    var scheduler = undefined;\r\n    if (isScheduler(observables[observables.length - 1])) {\r\n        scheduler = observables.pop();\r\n    }\r\n    if (typeof observables[observables.length - 1] === 'function') {\r\n        resultSelector = observables.pop();\r\n    }\r\n    if (observables.length === 1 && isArray(observables[0])) {\r\n        observables = observables[0];\r\n    }\r\n    return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\r\n}\r\nvar CombineLatestOperator = /*@__PURE__*/ (function () {\r\n    function CombineLatestOperator(resultSelector) {\r\n        this.resultSelector = resultSelector;\r\n    }\r\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\r\n    };\r\n    return CombineLatestOperator;\r\n}());\r\nexport { CombineLatestOperator };\r\nvar CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(CombineLatestSubscriber, _super);\r\n    function CombineLatestSubscriber(destination, resultSelector) {\r\n        var _this = _super.call(this, destination) || this;\r\n        _this.resultSelector = resultSelector;\r\n        _this.active = 0;\r\n        _this.values = [];\r\n        _this.observables = [];\r\n        return _this;\r\n    }\r\n    CombineLatestSubscriber.prototype._next = function (observable) {\r\n        this.values.push(NONE);\r\n        this.observables.push(observable);\r\n    };\r\n    CombineLatestSubscriber.prototype._complete = function () {\r\n        var observables = this.observables;\r\n        var len = observables.length;\r\n        if (len === 0) {\r\n            this.destination.complete();\r\n        }\r\n        else {\r\n            this.active = len;\r\n            this.toRespond = len;\r\n            for (var i = 0; i < len; i++) {\r\n                var observable = observables[i];\r\n                this.add(subscribeToResult(this, observable, undefined, i));\r\n            }\r\n        }\r\n    };\r\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\r\n        if ((this.active -= 1) === 0) {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    CombineLatestSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {\r\n        var values = this.values;\r\n        var oldVal = values[outerIndex];\r\n        var toRespond = !this.toRespond\r\n            ? 0\r\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\r\n        values[outerIndex] = innerValue;\r\n        if (toRespond === 0) {\r\n            if (this.resultSelector) {\r\n                this._tryResultSelector(values);\r\n            }\r\n            else {\r\n                this.destination.next(values.slice());\r\n            }\r\n        }\r\n    };\r\n    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\r\n        var result;\r\n        try {\r\n            result = this.resultSelector.apply(this, values);\r\n        }\r\n        catch (err) {\r\n            this.destination.error(err);\r\n            return;\r\n        }\r\n        this.destination.next(result);\r\n    };\r\n    return CombineLatestSubscriber;\r\n}(OuterSubscriber));\r\nexport { CombineLatestSubscriber };\r\n//# sourceMappingURL=combineLatest.js.map\r\n"]},"metadata":{},"sourceType":"module"}