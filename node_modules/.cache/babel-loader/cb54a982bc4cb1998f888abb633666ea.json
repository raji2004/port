{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammad Muzammil\\\\Desktop\\\\projects\\\\port\\\\src\\\\utilities\\\\commonUtils.js\";\nimport Home from '../portfolio-container/Home/Home';\nimport AboutMe from '../portfolio-container/AboutMe/AboutMe';\nimport Resume from '../portfolio-container/Resume/Resume';\nimport ContactMe from '../portfolio-container/ContactMe/ContactMe';\nimport React, { useRef, useEffect } from 'react';\nimport LoadingBar from 'react-top-loading-bar';\nimport loaderService from '../services/loader-service/loader-service';\nimport './commonUtils.css';\n/* TOTAL NUMBER OF SCREENS */\n\nexport const TOTAL_SCREENS = [{\n  screen_name: \"Home\",\n  component: Home\n}, {\n  screen_name: \"About Me\",\n  component: AboutMe\n}, {\n  screen_name: \"Resume\",\n  component: Resume\n}, // { screen_name: \"Portfolio\", component: null },\n{\n  screen_name: \"Contact Me\",\n  component: ContactMe\n}];\n/* GET SCREEN INDEX */\n\nexport const GET_SCREEN_INDEX = screen_name => {\n  if (!screen_name) return -1;\n\n  for (let i = 0; i < TOTAL_SCREENS.length; i++) {\n    if (TOTAL_SCREENS[i].screen_name === screen_name) return i;\n  }\n\n  return -1;\n};\n/* Loading Bar Component */\n\nexport const LoaderBar = () => {\n  const loaderReference = useRef(null);\n  const loadingBarOptions = {\n    shadow: true,\n    height: 4,\n    ref: loaderReference,\n    transitionTime: 1000,\n    className: 'loading-bar'\n  };\n\n  const invokeLoadingBar = () => {\n    if (!loaderReference || !loaderReference.current) return;\n    loaderReference.current.continuousStart(0, 800);\n  };\n\n  const completeLoadingBarProgress = () => {\n    if (!loaderReference || !loaderReference.current) return;\n    loaderReference.current.complete();\n  };\n\n  const loaderChangeHandler = changeType => {\n    switch (changeType) {\n      case \"start\":\n        invokeLoadingBar();\n        break;\n\n      case \"complete\":\n        completeLoadingBarProgress();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  let loaderChangeSubscription = loaderService.loaderChangeEmitter.subscribe(loaderChangeHandler);\n  useEffect(() => {\n    return () => {\n      /* UNSUBSCRIBE THE SUBSCRIPTIONS */\n      loaderChangeSubscription.unsubscribe();\n    };\n  }, [loaderChangeSubscription]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LoadingBar, Object.assign({}, loadingBarOptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  })));\n};","map":{"version":3,"sources":["C:/Users/Muhammad Muzammil/Desktop/projects/port/src/utilities/commonUtils.js"],"names":["Home","AboutMe","Resume","ContactMe","React","useRef","useEffect","LoadingBar","loaderService","TOTAL_SCREENS","screen_name","component","GET_SCREEN_INDEX","i","length","LoaderBar","loaderReference","loadingBarOptions","shadow","height","ref","transitionTime","className","invokeLoadingBar","current","continuousStart","completeLoadingBarProgress","complete","loaderChangeHandler","changeType","loaderChangeSubscription","loaderChangeEmitter","subscribe","unsubscribe"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,kCAAjB;AACA,OAAOC,OAAP,MAAoB,wCAApB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,SAAP,MAAsB,4CAAtB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,aAAP,MAA0B,2CAA1B;AACA,OAAO,mBAAP;AAEA;;AACA,OAAO,MAAMC,aAAa,GAAG,CAC3B;AACEC,EAAAA,WAAW,EAAE,MADf;AAEEC,EAAAA,SAAS,EAAEX;AAFb,CAD2B,EAK3B;AACEU,EAAAA,WAAW,EAAE,UADf;AAEEC,EAAAA,SAAS,EAAEV;AAFb,CAL2B,EAS3B;AAAES,EAAAA,WAAW,EAAE,QAAf;AAAyBC,EAAAA,SAAS,EAAET;AAApC,CAT2B,EAU3B;AACA;AAAEQ,EAAAA,WAAW,EAAE,YAAf;AAA6BC,EAAAA,SAAS,EAAER;AAAxC,CAX2B,CAAtB;AAcP;;AACA,OAAO,MAAMS,gBAAgB,GAAIF,WAAD,IAAiB;AAC/C,MAAI,CAACA,WAAL,EACE,OAAO,CAAC,CAAR;;AAEF,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,aAAa,CAACK,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,QAAIJ,aAAa,CAACI,CAAD,CAAb,CAAiBH,WAAjB,KAAiCA,WAArC,EACE,OAAOG,CAAP;AACH;;AAED,SAAO,CAAC,CAAR;AACD,CAVM;AAYP;;AACA,OAAO,MAAME,SAAS,GAAG,MAAM;AAC7B,QAAMC,eAAe,GAAGX,MAAM,CAAC,IAAD,CAA9B;AACA,QAAMY,iBAAiB,GAAG;AACxBC,IAAAA,MAAM,EAAE,IADgB;AAExBC,IAAAA,MAAM,EAAE,CAFgB;AAGxBC,IAAAA,GAAG,EAAEJ,eAHmB;AAIxBK,IAAAA,cAAc,EAAE,IAJQ;AAKxBC,IAAAA,SAAS,EAAE;AALa,GAA1B;;AAOA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAI,CAACP,eAAD,IAAoB,CAACA,eAAe,CAACQ,OAAzC,EACE;AAEFR,IAAAA,eAAe,CAACQ,OAAhB,CAAwBC,eAAxB,CAAwC,CAAxC,EAA2C,GAA3C;AACD,GALD;;AAOA,QAAMC,0BAA0B,GAAG,MAAM;AACvC,QAAI,CAACV,eAAD,IAAoB,CAACA,eAAe,CAACQ,OAAzC,EACE;AAEFR,IAAAA,eAAe,CAACQ,OAAhB,CAAwBG,QAAxB;AACD,GALD;;AAOA,QAAMC,mBAAmB,GAAIC,UAAD,IAAgB;AAC1C,YAAQA,UAAR;AACE,WAAK,OAAL;AACEN,QAAAA,gBAAgB;AAChB;;AACF,WAAK,UAAL;AACEG,QAAAA,0BAA0B;AAC1B;;AACF;AACE;AARJ;AAUD,GAXD;;AAaA,MAAII,wBAAwB,GAAGtB,aAAa,CAACuB,mBAAd,CAAkCC,SAAlC,CAA4CJ,mBAA5C,CAA/B;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACX;AACAwB,MAAAA,wBAAwB,CAACG,WAAzB;AACD,KAHD;AAID,GALQ,EAKN,CAACH,wBAAD,CALM,CAAT;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD,oBAAgBb,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD,CAlDM","sourcesContent":["import Home from '../portfolio-container/Home/Home';\r\nimport AboutMe from '../portfolio-container/AboutMe/AboutMe';\r\nimport Resume from '../portfolio-container/Resume/Resume';\r\nimport ContactMe from '../portfolio-container/ContactMe/ContactMe';\r\nimport React, { useRef, useEffect } from 'react';\r\nimport LoadingBar from 'react-top-loading-bar'\r\nimport loaderService from '../services/loader-service/loader-service';\r\nimport './commonUtils.css'\r\n\r\n/* TOTAL NUMBER OF SCREENS */\r\nexport const TOTAL_SCREENS = [\r\n  {\r\n    screen_name: \"Home\",\r\n    component: Home\r\n  },\r\n  {\r\n    screen_name: \"About Me\",\r\n    component: AboutMe\r\n  },\r\n  { screen_name: \"Resume\", component: Resume },\r\n  // { screen_name: \"Portfolio\", component: null },\r\n  { screen_name: \"Contact Me\", component: ContactMe }\r\n];\r\n\r\n/* GET SCREEN INDEX */\r\nexport const GET_SCREEN_INDEX = (screen_name) => {\r\n  if (!screen_name)\r\n    return -1;\r\n\r\n  for (let i = 0; i < TOTAL_SCREENS.length; i++) {\r\n    if (TOTAL_SCREENS[i].screen_name === screen_name)\r\n      return i;\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\n/* Loading Bar Component */\r\nexport const LoaderBar = () => {\r\n  const loaderReference = useRef(null);\r\n  const loadingBarOptions = {\r\n    shadow: true,\r\n    height: 4,\r\n    ref: loaderReference,\r\n    transitionTime: 1000,\r\n    className: 'loading-bar'\r\n  }\r\n  const invokeLoadingBar = () => {\r\n    if (!loaderReference || !loaderReference.current)\r\n      return;\r\n\r\n    loaderReference.current.continuousStart(0, 800);\r\n  }\r\n\r\n  const completeLoadingBarProgress = () => {\r\n    if (!loaderReference || !loaderReference.current)\r\n      return;\r\n\r\n    loaderReference.current.complete();\r\n  }\r\n\r\n  const loaderChangeHandler = (changeType) => {\r\n    switch (changeType) {\r\n      case \"start\":\r\n        invokeLoadingBar();\r\n        break;\r\n      case \"complete\":\r\n        completeLoadingBarProgress();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  let loaderChangeSubscription = loaderService.loaderChangeEmitter.subscribe(loaderChangeHandler);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      /* UNSUBSCRIBE THE SUBSCRIPTIONS */\r\n      loaderChangeSubscription.unsubscribe();\r\n    }\r\n  }, [loaderChangeSubscription]);\r\n\r\n  return (\r\n    <div>\r\n      <LoadingBar {...loadingBarOptions} />\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}